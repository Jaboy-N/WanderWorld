@page "/employees"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.CodeAnalysis.CSharp.Syntax
@using WanderWorld.Data
@using WanderWorld.Data
@implements IAsyncDisposable
@inject IDbContextFactory<EmployeeMangerContext> DbFactory
@rendermode InteractiveServer

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="employees/create">Create New</a>
</p>

<input type="search" class="form-control"
       @bind="firstNameFilter" @bind:event="oninput"/>

<QuickGrid Class="table" Items="context.Employee"
           Pagination="paginationState">
    <PropertyColumn Property="employee => employee.FirstName"
                    Sortable="true" Title="Firstname">
        <ColumnOptions>
            <input type="search" class="form-control"
                   @bind="firstNameFilter" @bind:event="oninput" autofocus=""/>
        </ColumnOptions>
        </PropertyColumn>

    <PropertyColumn Property="employee => employee.LastName"
    Sortable="true"/>
    <PropertyColumn Property="employee => employee.IsAdmin"/>

    <TemplateColumn Context="employee">
        <a href="@($"employees/edit?id={employee.Id}")">Edit</a> |
        <a href="@($"employees/details?id={employee.Id}")">Details</a> |
        <a href="@($"employees/delete?id={employee.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

<Paginator State="paginationState"/>

@code {
    private EmployeeMangerContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync()
    {
        await context.DisposeAsync();
    }

    PaginationState paginationState = new()
    {
        ItemsPerPage = 5
    };

    string firstNameFilter = "";

    public IQueryable<Employee> Employees
    => DbFactory.CreateDbContext().Employee
        .Where(e => e.FirstName!.Contains(firstNameFilter));

}